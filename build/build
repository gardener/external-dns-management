#!/usr/bin/env bash
#
# Copyright 2018 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

# For the build step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.
# BINARY_PATH - path to an existing (empty) directory to place build results into.

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$(readlink -f "$(dirname ${0})/..")"
else
  export SOURCE_PATH="$(readlink -f "${SOURCE_PATH}")"
fi

source "$SOURCE_PATH/build/setupenv.src"
if [ -z "$CMD" ]; then
  CMD="$EXE"
fi

echo WORKDIR="$(pwd)"

###############################################################################

VERSION_FILE="$(readlink -f "${SOURCE_PATH}/VERSION")"
VERSION="$(cat "${VERSION_FILE}")"

# If no LOCAL_BUILD environment variable is set, we configure the `go build` command
# to build for linux OS, amd64 architectures and without CGO enablement.
echo "running code generator..."
"hack/update-codegen.sh"
#"hack/update-wrappers.sh"
echo "running build..."

if [[ -z "$LOCAL_BUILD" ]]; then
  CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -a \
    -v \
    -o ${BINARY_PATH}/rel/$EXE \
    -ldflags "-w -X $PKGPATH/pkg/version.Version=${VERSION}" \
    cmd/$CMD/*.go


# If the LOCAL_BUILD environment variable is set, we simply run `go build`.
else
  go build \
    -v \
    -o ${BINARY_PATH}/$EXE \
    -ldflags "-w -X $PKGPATH/pkg/version.Version=${VERSION}" \
    cmd/$CMD/*.go

fi
