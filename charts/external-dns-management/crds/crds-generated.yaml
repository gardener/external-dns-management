apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "external-dns-management.name" . }}'
    helm.sh/chart: '{{ include "external-dns-management.chart" . }}'
  name: dnsentries.dns.gardener.cloud
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.dnsName
    description: DNS ObjectName
    name: DNS
    type: string
  - JSONPath: .status.providerType
    description: Provider type
    name: TYPE
    type: string
  - JSONPath: .status.provider
    description: Provider
    name: PROVIDER
    type: string
  - JSONPath: .status.state
    description: Status of DNS entry in cloud provider
    name: STATUS
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    name: AGE
    type: date
  group: dns.gardener.cloud
  names:
    kind: DNSEntry
    listKind: DNSEntryList
    plural: dnsentries
    shortNames:
    - dnse
    singular: dnsentry
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            cnameLookupInterval:
              format: int64
              type: integer
            dnsName:
              type: string
            ownerId:
              type: string
            targets:
              items:
                type: string
              type: array
            text:
              items:
                type: string
              type: array
            ttl:
              format: int64
              type: integer
          required:
          - dnsName
          type: object
        status:
          properties:
            message:
              type: string
            observedGeneration:
              format: int64
              type: integer
            provider:
              type: string
            providerType:
              type: string
            state:
              type: string
            targets:
              items:
                type: string
              type: array
            ttl:
              format: int64
              type: integer
            zone:
              type: string
          required:
          - state
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "external-dns-management.name" . }}'
    helm.sh/chart: '{{ include "external-dns-management.chart" . }}'
  name: dnsowners.dns.gardener.cloud
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.ownerId
    description: Owner Id
    name: OWNER
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    name: AGE
    type: date
  group: dns.gardener.cloud
  names:
    kind: DNSOwner
    listKind: DNSOwnerList
    plural: dnsowners
    singular: dnsowner
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            active:
              type: boolean
            ownerId:
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "external-dns-management.name" . }}'
    helm.sh/chart: '{{ include "external-dns-management.chart" . }}'
  name: dnsproviders.dns.gardener.cloud
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.type
    description: Provider type
    name: TYPE
    type: string
  - JSONPath: .status.state
    description: Status of DNS provider
    name: STATUS
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    name: AGE
    type: date
  group: dns.gardener.cloud
  names:
    kind: DNSProvider
    listKind: DNSProviderList
    plural: dnsproviders
    shortNames:
    - dnspr
    singular: dnsprovider
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            domains:
              properties:
                exclude:
                  items:
                    type: string
                  type: array
                include:
                  items:
                    type: string
                  type: array
              type: object
            providerConfig:
              type: object
            secretRef:
              description: SecretReference represents a Secret Reference. It has enough
                information to retrieve secret in any namespace
              properties:
                name:
                  description: Name is unique within a namespace to reference a secret
                    resource.
                  type: string
                namespace:
                  description: Namespace defines the space within which the secret
                    name must be unique.
                  type: string
              type: object
            type:
              type: string
            zones:
              properties:
                exclude:
                  items:
                    type: string
                  type: array
                include:
                  items:
                    type: string
                  type: array
              type: object
          type: object
        status:
          properties:
            domains:
              properties:
                excluded:
                  items:
                    type: string
                  type: array
                included:
                  items:
                    type: string
                  type: array
              type: object
            message:
              type: string
            observedGeneration:
              format: int64
              type: integer
            state:
              type: string
            zones:
              properties:
                excluded:
                  items:
                    type: string
                  type: array
                included:
                  items:
                    type: string
                  type: array
              type: object
          required:
          - domains
          - state
          - zones
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
