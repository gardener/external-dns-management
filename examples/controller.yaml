#
# service account
#
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dns
  name: dns
  namespace: kube-system
---
#
# permissions
#
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: dns
  name: dns
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - update
  - watch

- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - update
  - watch

- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - update
  - watch

- apiGroups:
  - dns.gardener.org
  resources:
  - dnsproviders
  - dnsentries
  verbs:
  - get
  - list
  - update
  - watch
  - create

- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: dns
  name: dns
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  # lease for controller manager
  - dns-controller-manager
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: dns
  name: dns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dns
subjects:
- kind: ServiceAccount
  name: dns
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: dns
  name: dns
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dns
subjects:
- kind: ServiceAccount
  name: dns
  namespace: kube-system

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: dns
  name: dns-controller-manager
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dns
        component: dns-controller-manager
    spec:
      containers:
      - name: controller-manager
        image: eu.gcr.io/gardener-project/dns-controller-manager:0.1.0-master
        imagePullPolicy: "Always"
        args:
        - --controllers=all
        - --identifier=dns-test
        - --ttl=60
        - --server-port-http=8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          {}

      serviceAccountName: dns
      terminationGracePeriodSeconds: 120

